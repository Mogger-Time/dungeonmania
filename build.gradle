plugins {
    id 'java-library'
    id "com.adarshr.test-logger" version "3.0.0"
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'org.json:json:20231013'
    implementation 'com.sparkjava:spark-core:2.9.3'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.+'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.8.0'
    implementation 'org.reflections:reflections:0.10.2'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.0'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4.2'
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

version = '1.2.1'

apply plugin: 'application'
apply plugin: 'eclipse'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

mainClassName = 'App'

allprojects {
  apply plugin: 'java'

    tasks.withType(Copy).configureEach {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**App**',
                              'scintilla/**',
                              'dungeonmania/util/**', 
                              'dungeonmania/response/models/**', 
                              'dungeonmania/exceptions/**'])
        })
    }

    dependsOn test
}